/* automatically generated by JSCoverage - do not edit */
if (! top._$jscoverage) {
  top._$jscoverage = {};
}
var _$jscoverage = top._$jscoverage;
if (! _$jscoverage['javascript-try.js']) {
  _$jscoverage['javascript-try.js'] = [];
  _$jscoverage['javascript-try.js'][1] = 0;
  _$jscoverage['javascript-try.js'][3] = 0;
  _$jscoverage['javascript-try.js'][4] = 0;
  _$jscoverage['javascript-try.js'][7] = 0;
  _$jscoverage['javascript-try.js'][10] = 0;
  _$jscoverage['javascript-try.js'][11] = 0;
  _$jscoverage['javascript-try.js'][14] = 0;
  _$jscoverage['javascript-try.js'][17] = 0;
  _$jscoverage['javascript-try.js'][18] = 0;
  _$jscoverage['javascript-try.js'][21] = 0;
  _$jscoverage['javascript-try.js'][24] = 0;
  _$jscoverage['javascript-try.js'][25] = 0;
  _$jscoverage['javascript-try.js'][28] = 0;
  _$jscoverage['javascript-try.js'][31] = 0;
}
_$jscoverage['javascript-try.js'][1]++;
function f() {
}
_$jscoverage['javascript-try.js'][3]++;
try {
  _$jscoverage['javascript-try.js'][4]++;
  f();
}
catch (e) {
  _$jscoverage['javascript-try.js'][7]++;
  f();
}
_$jscoverage['javascript-try.js'][10]++;
try {
  _$jscoverage['javascript-try.js'][11]++;
  f();
}
catch (e if e instanceof E) {
  _$jscoverage['javascript-try.js'][14]++;
  f();
}
_$jscoverage['javascript-try.js'][17]++;
try {
  _$jscoverage['javascript-try.js'][18]++;
  f();
}
finally {
  _$jscoverage['javascript-try.js'][21]++;
  f();
}
_$jscoverage['javascript-try.js'][24]++;
try {
  _$jscoverage['javascript-try.js'][25]++;
  f();
}
catch (e) {
  _$jscoverage['javascript-try.js'][28]++;
  f();
}
finally {
  _$jscoverage['javascript-try.js'][31]++;
  f();
}
_$jscoverage['javascript-try.js'].source = ["<span class=\"k\">function</span> f<span class=\"k\">()</span> <span class=\"k\">{}</span>","","<span class=\"k\">try</span> <span class=\"k\">{</span>","  f<span class=\"k\">();</span>","<span class=\"k\">}</span>","<span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","  f<span class=\"k\">();</span>","<span class=\"k\">}</span>","","<span class=\"k\">try</span> <span class=\"k\">{</span>","  f<span class=\"k\">();</span>","<span class=\"k\">}</span>","<span class=\"k\">catch</span> <span class=\"k\">(</span>e <span class=\"k\">if</span> e <span class=\"k\">instanceof</span> E<span class=\"k\">)</span> <span class=\"k\">{</span>","  f<span class=\"k\">();</span>","<span class=\"k\">}</span>","","<span class=\"k\">try</span> <span class=\"k\">{</span>","  f<span class=\"k\">();</span>","<span class=\"k\">}</span>","<span class=\"k\">finally</span> <span class=\"k\">{</span>","  f<span class=\"k\">();</span>","<span class=\"k\">}</span>","","<span class=\"k\">try</span> <span class=\"k\">{</span>","  f<span class=\"k\">();</span>","<span class=\"k\">}</span>","<span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","  f<span class=\"k\">();</span>","<span class=\"k\">}</span>","<span class=\"k\">finally</span> <span class=\"k\">{</span>","  f<span class=\"k\">();</span>","<span class=\"k\">}</span>"];
