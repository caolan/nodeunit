{
  "name": "foreground-child",
  "version": "1.3.0",
  "description": "Run a child as if it's the foreground process.  Give it stdio.  Exit when it exits.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "signal-exit": "^2.0.0",
    "win-spawn": "^2.0.0"
  },
  "devDependencies": {
    "tap": "^1.2.1"
  },
  "scripts": {
    "test": "tap --coverage test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/foreground-child.git"
  },
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/isaacs/foreground-child/issues"
  },
  "homepage": "https://github.com/isaacs/foreground-child#readme",
  "gitHead": "ad7ba1d4a84e8b199cbfb5d30e01e586390978cc",
  "readme": "# foreground-child\n\n[![Build Status](https://travis-ci.org/isaacs/foreground-child.png)](https://travis-ci.org/isaacs/foreground-child)\n\nRun a child as if it's the foreground process.  Give it stdio.  Exit\nwhen it exits.\n\nMostly this module is here to support some use cases around wrapping\nchild processes for test coverage and such.\n\n## USAGE\n\n```js\nvar foreground = require('foreground-child')\n\n// cats out this file\nvar child = foreground('cat', [__filename])\n\n// At this point, it's best to just do nothing else.\n// return or whatever.\n// If the child gets a signal, or just exits, then this\n// parent process will exit in the same way.\n```\n\nA callback can optionally be provided, if you want to perform an action\nbefore your foreground-child exits:\n\n```js\nvar child = foreground('cat', [__filename], function (done) {\n  // perform an action.\n  return done()\n})\n```\n",
  "readmeFilename": "README.md",
  "_id": "foreground-child@1.3.0",
  "_shasum": "709eb362a23a7befd3ba349fddfc7168957831d5",
  "_from": "git+https://github.com/bcoe/foreground-child.git#win-spawn",
  "_resolved": "git+https://github.com/bcoe/foreground-child.git#ad7ba1d4a84e8b199cbfb5d30e01e586390978cc"
}
